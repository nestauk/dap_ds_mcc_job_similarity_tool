import pandas as pd
import openpyxl
from mcc_sussex import PROJECT_DIR
from typing import Union
import yaml


def get_raw_sector_data(type: Union[str, bool] = None) -> Union[openpyxl.Workbook, pd.ExcelFile]:
    """gets the lookup file of SOC codes to high priority sectors provided by Sussex 

    Args:
        type (Union[str, bool], optional): "openpyxl": return data as Openpyxl workbook, otherwise return as pandas Excel File. Defaults to None.

    Returns:
        Union[openpyxl.Workbook, pd.ExcelFile]: either Openxpyxl workbook or excel file
    """
    if type == "openpyxl":
        return openpyxl.load_workbook(f'{PROJECT_DIR}/mcc_sussex/data/raw/SOC Codes for 6 Key Sectors V2.xlsx')
    else:
        return pd.ExcelFile(f'{PROJECT_DIR}/mcc_sussex/data/raw/SOC Codes for 6 Key Sectors V2.xlsx')


def get_cleaned_sector_data(type: Union[str, bool] = None) -> Union[openpyxl.Workbook, pd.ExcelFile]:
    """Manually expanded the last tab of the raw data with the updated high priority sectors

    Args:
        type (Union[str, bool], optional): "openpyxl": return data as Openpyxl workbook, otherwise return as pandas Excel File. Defaults to None.

    Returns:
        Union[openpyxl.Workbook, pd.ExcelFile]: either Openxpyxl workbook or excel file
    """
    if type == "openpyxl":
        return openpyxl.load_workbook(f'{PROJECT_DIR}/mcc_sussex/data/interim/priority_sectors_manual_cleaning.xlsx')
    else:
        return pd.ExcelFile(f'{PROJECT_DIR}/mcc_sussex/data/interim/priority_sectors_manual_cleaning.xlsx')


def priority_sector_map() -> pd.DataFrame:
    """map of ESCO codes to Sussex priority sectors generated by data_preprocessing/priority_sectors_to_esco.py

    Returns:
        pd.DataFrame: lookup of ESCO occupational codes to Sussex priority sectors
    """
    return pd.read_csv(f'{PROJECT_DIR}/mcc_sussex/data/processed/esco_codes_to_priority_sectors.csv')


def sector_descriptions() -> dict:
    """descriptions of each of the high priority sectors, generated manually based on long descriptions provided by Sussex

    Returns:
        dict: key: Sector name, value: description
    """
    return yaml.safe_load(open(f'{PROJECT_DIR}/mcc_sussex/data/processed/sector_descriptions.yaml', 'r'))
